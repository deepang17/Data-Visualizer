@using System.Data
@{
    ViewBag.Title = "Correlation";
}

<head>
    <!-- Plotly.js -->
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
</head>

<body>

    <div id="myDiv" style="margin-top:100px"><!-- Plotly chart will be drawn inside this DIV --></div>
    <form action="/Main/Plot" method="get">
        <button style="margin-top:20px;width:100%" type="submit" class="btn btn-primary" id="subButton">Proceed</button>
    </form>
    
    <script>
        var zValues = [];
    </script>

    <script>
        var xValues = [];

        var yValues = [];
    </script>
    @foreach (string ite in ViewBag.Labels)
    {
        <script>
            xValues.push('@ite');
            yValues.push('@ite');
        </script>
    }

    <script>
        var m = [];
    </script>

    @{int x = ViewBag.Coun;
        int u = ViewBag.Data.Count;
        int w, y = 0;
        for (int z = 0; z < ViewBag.Coun; z++)
        {
            if (x <= u)
            {
                for (w = y; w < x; w++)
                {
                    <script>
                    m.push(@ViewBag.Data[w]);
                    </script>
                }
                y = w;
                x += ViewBag.Coun;
            }
            <script>
                zValues.push(m);
                m = [];
            </script>
        }
    }
    <script>
        /*zValues = [
            [1.00, 0.00, -0.75, 0.75, 0.00],
            [0.34, 0.0916836719849693, 0.75, 0.75, 0.00],
            [0.75, 0.75, 0.75, 0.75, 0.75],
            [0.00, 0.00, 0.00, 0.75, 0.00]
        ];*/

        var colorscaleValue = [
            [0, '#3D9970'],
            [1, '#001f3f']
        ];

        var data = [{
            x: xValues,
            y: yValues,
            z: zValues,
            type: 'heatmap',
            colorscale: colorscaleValue,
            showscale: false
        }];

        var layout = {
            title: 'Correlation Matrix',
            annotations: [],
            xaxis: {
                ticks: '',
                side: 'top'
            },
            yaxis: {
                ticks: '',
                ticksuffix: ' ',
                width: 1000,
                height: 1000,
                autosize: false
            }
        };

        for (var i = 0; i < yValues.length; i++) {
            for (var j = 0; j < xValues.length; j++) {
                var currentValue = zValues[i][j];
                if (currentValue != 0.0) {
                    var textColor = 'white';
                } else {
                    var textColor = 'black';
                }
                var result = {
                    xref: 'x1',
                    yref: 'y1',
                    x: xValues[j],
                    y: yValues[i],
                    text: zValues[i][j],
                    font: {
                        family: 'Arial',
                        size: 12,
                        color: 'rgb(50, 171, 96)'
                    },
                    showarrow: false,
                    font: {
                        color: textColor
                    }
                };
                layout.annotations.push(result);
            }
        }

        Plotly.newPlot('myDiv', data, layout, { showSendToCloud: true });
    </script>
</body>